version: '3.9'
services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
  api:
    build: ./api
    env_file: .env
    environment:
      TZ: ${TZ}
    expose:
      - '8000'
    depends_on: [db]
    restart: unless-stopped
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    env_file: .env
    image: asia-frontend-prod:latest
  web:
    image: nginx:alpine
    depends_on: [api, frontend]
    volumes:
      - ./nginx/prod.conf:/etc/nginx/conf.d/default.conf:ro
      - webroot:/var/www/certbot
      - letsencrypt:/etc/letsencrypt
      - type: volume
        source: frontend_dist
        target: /usr/share/nginx/html
        read_only: true
    ports: ['80:80','443:443']
    restart: unless-stopped
  certbot:
    image: certbot/certbot:latest
    entrypoint: /bin/sh
    volumes:
      - letsencrypt:/etc/letsencrypt
      - webroot:/var/www/certbot
    command: -c "trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot --quiet; sleep 12h; done"
    restart: unless-stopped
  db-backup:
    build:
      context: ./backup
      dockerfile: Dockerfile
    env_file: .env
    environment:
      PGPASSWORD: ${POSTGRES_PASSWORD}
      PGHOST: ${POSTGRES_HOST}
      PGPORT: ${POSTGRES_PORT}
      PGUSER: ${POSTGRES_USER}
      PGDATABASE: ${POSTGRES_DB}
      BACKUP_RETENTION_DAYS: ${BACKUP_RETENTION_DAYS}
      BACKUP_SCHEDULE_CRON: ${BACKUP_SCHEDULE_CRON}
      TZ: ${TZ}
    volumes:
      - ${BACKUP_DIR_HOST}:/backups
    depends_on: [db]
    restart: unless-stopped
  offsite-backup:
    image: restic/restic:latest
    env_file: .env
    environment:
      TZ: ${TZ}
    volumes:
      - ${BACKUP_DIR_HOST}:/backups:ro
      - ./offsite:/app:ro
      - restic_cache:/root/.cache/restic
    entrypoint: ['/bin/sh','/app/offsite.sh']
    depends_on: [db-backup]
    restart: unless-stopped
volumes:
  pgdata:
  webroot:
  letsencrypt:
  frontend_dist:
  restic_cache:
